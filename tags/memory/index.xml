<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>memory on DevBJ.com</title>
    <link>https://wizfi.github.io/mydocs/tags/memory/</link>
    <description>Recent content in memory on DevBJ.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 20 Sep 2016 16:20:29 -0400</lastBuildDate>
    
	<atom:link href="https://wizfi.github.io/mydocs/tags/memory/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang의 내부, 6부: 부트스트래핑과 메모리 할당자</title>
      <link>https://wizfi.github.io/mydocs/golangkorea/golang-internals/part6/</link>
      <pubDate>Tue, 20 Sep 2016 16:20:29 -0400</pubDate>
      
      <guid>https://wizfi.github.io/mydocs/golangkorea/golang-internals/part6/</guid>
      <description>이 포스트는 Golang 내부 시리즈의 연속이다. Go 런타임을 자세히 이해하는데 열쇠와 같은 부트스트랩 과정을 살펴볼 것이다. 이번에는 시작하는 순서의 두번째 부분을 섭렵해</description>
    </item>
    
  </channel>
</rss>