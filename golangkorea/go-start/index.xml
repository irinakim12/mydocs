<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go 시작하기 on DevBJ.com</title>
    <link>https://wizfi.github.io/mydocs/golangkorea/go-start/</link>
    <description>Recent content in Go 시작하기 on DevBJ.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 23 Aug 2016 22:35:57 -0400</lastBuildDate>
    
	<atom:link href="https://wizfi.github.io/mydocs/golangkorea/go-start/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go언어 시작하기</title>
      <link>https://wizfi.github.io/mydocs/golangkorea/go-start/getting-start/</link>
      <pubDate>Sun, 28 Aug 2016 15:10:07 +0830</pubDate>
      
      <guid>https://wizfi.github.io/mydocs/golangkorea/go-start/getting-start/</guid>
      <description>Go 언어에 대해서 구글이 2009년에 만든 비교적 새로운 프로그래밍 언어다. 2009년이면 거의 7년 이상된 구닥다리 언어잖아? 라고 생각 할 수 있겠으나, Rub</description>
    </item>
    
    <item>
      <title>Go의 주요 특징들</title>
      <link>https://wizfi.github.io/mydocs/golangkorea/go-start/feature/</link>
      <pubDate>Mon, 12 Sep 2016 13:10:03 +0900</pubDate>
      
      <guid>https://wizfi.github.io/mydocs/golangkorea/go-start/feature/</guid>
      <description>단순함 Go 언어는 단순함(simplicity)과 실용성(pragmatism)을 지향하는 언어로 이 두가지 철학이 다른 모든 것들 보다 상위에 있다. go 언어</description>
    </item>
    
    <item>
      <title>Go와 객체지향</title>
      <link>https://wizfi.github.io/mydocs/golangkorea/go-start/object-oriented/</link>
      <pubDate>Sun, 02 Oct 2016 00:51:06 +0900</pubDate>
      
      <guid>https://wizfi.github.io/mydocs/golangkorea/go-start/object-oriented/</guid>
      <description>객체지향 프로그래밍 Go는 클래스(Class)가 없다!! Struct가 Class의 역할을 수행 할 수 있기는 하지만 메서드도 구조체로부터 분리되는 구성을</description>
    </item>
    
  </channel>
</rss>